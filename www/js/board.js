// Generated by CoffeeScript 1.10.0
(function() {
  var pieceBelongsToMovingSide;

  pieceBelongsToMovingSide = function(movingSide, piece) {
    return (movingSide === 'w' && piece.search(/^b/) !== 1) && (movingSide === 'b' && piece.search(/^w/) !== 1);
  };

  define(["lib/chessboard-0.3.0"], function(Chessboard) {
    return function(game, onMove) {
      var cfg;
      cfg = {
        draggable: true,
        position: 'start',
        onDragStart: function(source, piece, position, orientation) {
          if (game.game_over() || pieceBelongsToMovingSide(game.turn(), piece)) {
            return false;
          }
        },
        onDrop: function(source, target) {
          var moveResult;
          console.log("Calling onDrop");
          moveResult = onMove({
            type: "move",
            move: {
              from: source,
              to: target,
              promotion: 'q'
            }
          });
          console.log("After callback");
          if (moveResult === null || typeof moveResult === "undefined") {
            return 'snapback';
          }
        },
        onSnapEnd: function(source, target, piece) {
          return console.log("Snap ended!");
        }
      };
      return new ChessBoard('board', cfg);
    };
  });

}).call(this);
