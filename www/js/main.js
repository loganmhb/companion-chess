// Generated by CoffeeScript 1.10.0
(function() {
  requirejs.config({
    baseUrl: "js/",
    shim: {
      'lib/chessboard-0.3.0': {
        exports: "ChessBoard",
        deps: ["jquery"]
      }
    }
  });

  requirejs(["lib/chess", "board", "engine", "controlPanel"], function(Chess, board, engine, controlPanel) {
    var b, cp, eventHandler, game, makeComputerMove, newGame, playerSide, uciHandler;
    game = new Chess();
    playerSide = 'w';
    uciHandler = function(uciCommand) {
      switch (uciCommand.type) {
        case "info":
          return console.log("Info command received.");
        case "bestmove":
          return makeComputerMove(uciCommand.move);
      }
    };
    eventHandler = function(event) {
      switch (event.type) {
        case "move":
          game.move(event.move);
          b.position(game.fen());
          if (game.turn() !== playerSide) {
            return engine.searchForBestMove(game.fen(), uciHandler);
          }
          break;
        case "newgame":
          playerSide = event.playerSide;
          return newGame();
        case "uci":
          return handleUci(event.data);
      }
    };
    cp = controlPanel(game, eventHandler);
    b = board(game, eventHandler);
    makeComputerMove = function(move) {
      game.move(move);
      b.position(game.fen());
      return cp.updateStatus(game);
    };
    newGame = function() {
      game.reset();
      b.orientation = (playerSide === 'w' ? "white" : "black");
      b.position(game.fen());
      cp.updateStatus(game);
      if (playerSide === 'b') {
        return engine.searchForBestMove(game.fen(), eventHandler);
      }
    };
    return newGame();
  });

}).call(this);
